{"version":3,"sources":["fretboard/ev_channel.js","fretboard/notes.ts","fretboard/scales.ts","fretboard/selector.tsx","fretboard/defs.ts","fretboard/blFret.ts","fretboard/Fret.tsx","fretboard/GString.tsx","fretboard/Guitar.tsx","fretboard/pages/scales_page_component.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Emitter","emitter","__slice","slice","callbacks","sub","ev","callback","evs","name","_i","_len","_results","split","length","push","pub","args","_ref","arguments","call","shift","apply","unsub","i","list","_j","_len1","_results1","splice","callbacks_map","module","exports","this","A","Ad","B","C","Cd","D","Dd","E","F","Fd","G","Gd","ref","SHARP_NOTES","Array","from","FLAT_NOTES","TUNINGS","Standard","notes","offset","DropD","DropC","get_note_index","note","get_new_index","old_idx","generateNotes","sCount","fCount","tuning","concat","result","sNum","end","asc","noteGen","idx","ret_idx","getNoteGenerator","left","right","inclusive","range","ascending","__range__","map","generate_scale_helper","notesRef","Note","scale","scale_notes","degree","scaleName","size","s","_","_t","names","generate_scale","withSharps","withFlats","includes","isValidScale","SCALES","Major","desc","get_notes","Tonica","NaturalMinor","Minor","PentatonicMinor","PentatonicMajor","Arabic","Blues","MajorArpeggio","MinorArpeggio","Selector","props","state","elRef","turnOnLoader","setState","loader","turnOffLoader","onMouseDown","e","button","current","offsetLeft","relx","pageX","dragging","console","log","stopPropagation","preventDefault","onMouseUp","onMouseMove","pos","newX","minX","maxX","useX","x","ch","onXChange","React","createRef","initialPos","y","loaderFontSize","className","style","height","width","top","position","background","textAlign","opacity","paddingTop","display","color","fontSize","fontStyle","document","addEventListener","removeEventListener","Component","blFret","fNum","checked","playing","selected","root_note","is_open","data","playStart","playStop","check","uncheck","select","unselect","set_root","set_open","Fret","text","fretClass","playClass","GString","fret","make_fret","key","Fwidth","Fheight","frets","clickHowl","Howl","src","claveHowl","Guitar","jsGuitarRef","displayRef","playScaleHelper","firstTime","Scale","notesMap","stringsNum","fretsNum","self","tabs_to_play","get_selected_frets","startAtRoot","async","mapSeries","nums","cb","noteEntry","n","direction","halfToneOffset","innerHTML","is_playing","startPlayFret","play","setTimeout","bpm","playing_fret","undefined","err","repeat","changeDirection","toggleDirection","playScale","intro","get_frets","j","end1","asc1","getClearFrets","selectorWidth","selectorFretsCount","fretWidth","selector","selectorX","string","sN","fN","needle","fret_offset","_sN","_fN","togglePlayPause","stopPlayScale","fretHeight","onSelectorMove","timeout","originalDirection","done","timesCounted","firstTab","toString","countOff","ret_tabs","strings","object","reverse","shouldInclude","offsetTop","SelectorPaddingPx","StringsList","num","SelectorComp","SingleDotFrets","FretDots","margin","FretNumbers","active","justifyContent","alignItems","alignContent","backgroundColor","padding","Button","variant","onClick","icon","faStop","faPlay","faRedo","faArrowDown","faArrowUp","faRandom","notesOptions","value","label","scalesOptions","ScalesPage","join","flexDirection","zIndex","paddingBottom","options","placeholder","searchable","values","onChange","Number","target","bottom","href","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.812c9f04.chunk.js","sourcesContent":["// Generated by CoffeeScript 1.7.1\n(function() {\n  var Emitter, emitter,\n    __slice = [].slice;\n\n  Emitter = function() {\n    var callbacks, callbacks_map, pub, sub, unsub;\n    callbacks = {};\n    sub = function(ev, callback) {\n      var calls, evs, name, _i, _len, _results;\n      evs = ev.split(' ');\n      calls = callbacks;\n      _results = [];\n      for (_i = 0, _len = evs.length; _i < _len; _i++) {\n        name = evs[_i];\n        callbacks[name] || (callbacks[name] = []);\n        _results.push(callbacks[name].push(callback));\n      }\n      return _results;\n    };\n    pub = function() {\n      var args, callback, ev, _i, _len, _ref;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      ev = args.shift();\n      if (!callbacks[ev]) {\n        return;\n      }\n      _ref = callbacks[ev];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        callback = _ref[_i];\n        if (callback.apply(null, args) === false) {\n          break;\n        }\n      }\n      return true;\n    };\n    unsub = function(ev, callback) {\n      var cb, evs, i, list, name, _i, _len, _results;\n      evs = ev.split(' ');\n      _results = [];\n      for (_i = 0, _len = evs.length; _i < _len; _i++) {\n        name = evs[_i];\n        list = callbacks[name];\n        if (!list) {\n          continue;\n        }\n        if (!callback) {\n          delete callbacks[name];\n          continue;\n        }\n        _results.push((function() {\n          var _j, _len1, _results1;\n          _results1 = [];\n          for (i = _j = 0, _len1 = list.length; _j < _len1; i = ++_j) {\n            cb = list[i];\n            if (!(cb === callback)) {\n              continue;\n            }\n            list = list.slice();\n            list.splice(i, 1);\n            callbacks[name] = list;\n            break;\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n    callbacks_map = function() {\n      return callbacks;\n    };\n    return {\n      sub: sub,\n      pub: pub,\n      unsub: unsub,\n      callbacks_map: callbacks_map\n    };\n  };\n\n  emitter = new Emitter();\n\n  module.exports = {\n    emitter: emitter,\n    Emitter: Emitter\n  };\n\n}).call(this);\n","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS104: Avoid inline assignments\n * DS202: Simplify dynamic range loops\n * DS205: Consider reworking code to avoid use of IIFEs\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nlet A, Ad, B, C, Cd, D, Dd, E, F, Fd, G, Gd, ref;\n\nexport const ALL_NOTES = \n    [\"C\", \"C#\", \"Db\", \"D\", \"D#\", \"Eb\", \"E\", \"Fb\", \"F\", \"F#\", \"Gb\", \"G\", \"G#\", \"Ab\", \"A\", \"A#\", \"Bb\", \"B\", \"Cb\"];\n\nexport const SHARP_NOTES =\n  (([C, Cd, D, Dd, E, F, Fd, G, Gd, A, Ad, B] = Array.from(\n    (ref = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"])\n  )),\n  ref);\n\nexport const FLAT_NOTES =\n  (([C, Cd, D, Dd, E, F, Fd, G, Gd, A, Ad, B] = Array.from(\n    (ref = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"])\n  )),\n  ref);\n\nexport type Tuning = {\n    name: string,\n    notes: string[],\n    offset: number[]\n}\n\nexport const TUNINGS: Record<string, Tuning> = {\n  Standard: {\n    name: \"Standard E\",\n    notes: [E, B, G, D, A, E],\n    offset: [0, 0, 0, 0, 0, 0],\n  },\n\n  DropD: {\n    name: \"Dropped D\",\n    notes: [E, B, G, D, A, D],\n    offset: [0, 0, 0, 0, 0, -2],\n  },\n\n  \"1StepDown\": {\n    name: \"1 step down\",\n    notes: [Dd, Ad, Fd, Cd, Gd, Dd],\n    offset: [-1, -1, -1, -1, -1, -1],\n  },\n\n  DropC: {\n    name: \"Dropped C\",\n    notes: [D, A, F, C, G, C],\n    offset: [-2, -2, -2, -2, -2, -4],\n  },\n};\n\nexport const get_note_index = (note: string, notes: string[]) => {\n  for (let i = 0; i < notes.length; i++) {\n    const n = notes[i];\n    if (note === n) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nexport const get_new_index = (old_idx: number, notes: string[]) => {\n  if (old_idx === notes.length - 1) {\n    return 0;\n  } else {\n    return old_idx + 1;\n  }\n};\n\nexport const getNoteGenerator = (note: string, notes: string[]) => {\n  let idx = get_note_index(note, notes);\n  return () => {\n    const ret_idx = idx;\n    idx = get_new_index(idx, notes);\n    return notes[ret_idx];\n  };\n};\n\n// Concatting because of consistency with tabs format\n// to make 1st element of array to be the 1st string\nexport const generateNotes = (sCount: number, fCount: number, tuning: any, notes: string[]) => {\n  const base: string[][] = [[]];\n  return base.concat(\n    (() => {\n      const result = [];\n      for (\n        let sNum = 0, end = sCount - 1, asc = 0 <= end;\n        asc ? sNum <= end : sNum >= end;\n        asc ? sNum++ : sNum--\n      ) {\n        const noteGen = getNoteGenerator(tuning[sNum], notes);\n        result.push(__range__(0, fCount, true).map(() => noteGen()));\n      }\n      return result;\n    })()\n  );\n};\n\nfunction __range__(left: number, right: number, inclusive: boolean) {\n  let range = [];\n  let ascending = left < right;\n  let end = !inclusive ? right : ascending ? right + 1 : right - 1;\n  for (let i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n    range.push(i);\n  }\n  return range;\n}\n","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS205: Consider reworking code to avoid use of IIFEs\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nimport {\n  get_note_index,\n  get_new_index,\n  SHARP_NOTES,\n  FLAT_NOTES,\n} from \"./notes\";\nimport * as _ from \"lodash\";\n\nconst BigSTEP = 3;\nconst STEP = 2;\nconst hSTEP = 1;\n\nexport type NoteEntry = {\n  name: string;\n  degree: number;\n  scaleName: string;\n  offset: number;\n};\n\nconst generate_scale_helper = (\n  notesRef: string[],\n  Note: string,\n  scale: Scale\n): NoteEntry[] => {\n  let idx: number;\n  const scale_notes = [\n    {\n      name: Note,\n      degree: 1,\n      scaleName: \"Root\",\n      offset: 0,\n    },\n  ];\n  idx = get_note_index(Note, notesRef);\n  let degree = 0;\n  let offset = 0;\n  return scale_notes.concat(\n    (() => {\n      const result = [];\n      for (let s of Array.from(scale.size)) {\n        offset += s;\n\n        // eslint-disable-next-line no-loop-func\n        _.times(s, (_t) => {\n          idx = get_new_index(idx, notesRef);\n        });\n\n        result.push({\n          name: notesRef[idx],\n          degree: degree + 2,\n          scaleName: scale.names[degree],\n          offset,\n        });\n        degree++;\n      }\n      return result;\n    })()\n  );\n};\n\nconst generate_scale = (\n  Note: string,\n  scale: Scale\n): {\n  notes: string[];\n  scale: NoteEntry[];\n} => {\n  const withSharps = generate_scale_helper(SHARP_NOTES, Note, scale);\n  const withFlats = generate_scale_helper(FLAT_NOTES, Note, scale);\n\n  function isValidScale(scale: NoteEntry[]) {\n    return _.uniq(scale.map((s) => s.name[0])).length === scale.length;\n  }\n\n  if (Note.includes(\"b\")) {\n    return { scale: withFlats, notes: FLAT_NOTES };\n  }\n\n  if (Note.includes(\"#\")) {\n    return { scale: withSharps, notes: SHARP_NOTES };\n  }\n\n  if (!isValidScale(withSharps)) {\n    return { scale: withFlats, notes: FLAT_NOTES };\n  }\n\n  return { scale: withSharps, notes: SHARP_NOTES };\n};\n\ntype Scale = {\n  desc: string;\n  size: number[];\n  get_notes: (s: string) => any;\n  names: string[];\n};\n\nconst SCALES: Record<string, Scale> = {\n  Major: {\n    desc: \"Major\",\n    size: [STEP, STEP, hSTEP, STEP, STEP, STEP, hSTEP],\n    names: [\n      \"Major 2nd\",\n      \"Major 3rd\",\n      \"Perfect 4th\",\n      \"Perfect 5th\",\n      \"Major 6th\",\n      \"Major 7th\",\n      \"Octave\",\n    ],\n    get_notes(Tonica) {\n      return generate_scale(Tonica, SCALES.Major);\n    },\n  },\n\n  NaturalMinor: {\n    desc: \"Natural Minor\",\n    names: [\n      \"Major 2nd\",\n      \"Minor 3rd\",\n      \"Perfect 4th\",\n      \"Perfect 5th\",\n      \"Minor 6th\",\n      \"Minor 7th\",\n      \"Octave\",\n    ],\n    size: [STEP, hSTEP, STEP, STEP, hSTEP, STEP, STEP],\n    get_notes(Tonica) {\n      return generate_scale(Tonica, SCALES.Minor);\n    },\n  },\n\n  PentatonicMinor: {\n    desc: \"Pentatonic Minor\",\n    names: [\"Minor 3rd\", \"Perfect 4th\", \"Perfect 5th\", \"Minor 7th\", \"Octave\"],\n    size: [BigSTEP, STEP, STEP, BigSTEP, STEP],\n    get_notes(Tonica) {\n      return generate_scale(Tonica, SCALES.PentatonicMinor);\n    },\n  },\n\n  PentatonicMajor: {\n    desc: \"Pentatonic Major\",\n    names: [\"Major 3rd\", \"Perfect 4th\", \"Perfect 5th\", \"Major 7th\", \"Octave\"],\n    size: [STEP, STEP, BigSTEP, STEP, BigSTEP],\n    get_notes(Tonica) {\n      return generate_scale(Tonica, SCALES.PentatonicMajor);\n    },\n  },\n\n  Arabic: {\n    desc: \"Arabic\",\n    names: [],\n    size: [hSTEP, BigSTEP, hSTEP, hSTEP, BigSTEP, hSTEP, STEP],\n    get_notes(Tonica) {\n      return generate_scale(Tonica, SCALES.Arabic);\n    },\n  },\n\n  Blues: {\n    desc: \"Blues\",\n    names: [],\n    size: [BigSTEP, STEP, hSTEP, hSTEP, BigSTEP, STEP],\n    get_notes(Tonica) {\n      return generate_scale(Tonica, SCALES.Blues);\n    },\n  },\n\n  MajorArpeggio: {\n    desc: \"Major Arpeggio\",\n    names: [\"Major 3rd\", \"Perfect 5th\", \"Octave\"],\n    size: [4, 3, 5],\n    get_notes(Tonica) {\n      return generate_scale(Tonica, SCALES.MajorArpeggio);\n    },\n  },\n\n  MinorArpeggio: {\n    desc: \"Minor Arpeggio\",\n    names: [\"Minor 3rd\", \"Perfect 5th\", \"Octave\"],\n    size: [3, 4, 5],\n    get_notes(Tonica) {\n      return generate_scale(Tonica, SCALES.MinorArpeggio);\n    },\n  },\n};\n\nexport { SCALES, generate_scale, STEP, hSTEP, BigSTEP };\n","/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nimport React from \"react\";\n\nimport { emitter } from \"./ev_channel\";\n\nimport { EVENT_SOUNDS_LOADING_START, EVENT_SOUNDS_LOADING_STOP } from \"./defs\";\n\ntype Position = {\n  x?: number;\n  y?: number;\n};\n\nexport type SelectorProps = {\n  useX?: boolean;\n  useY?: boolean;\n  minX: number;\n  maxX: number;\n  onXChange: Function;\n  initialPos?: Position;\n  loader?: boolean;\n  height: number;\n  width: number;\n};\ntype MyState = {\n  loaderFontSize: number;\n  dragging: boolean;\n  relx: number;\n  pos: Position;\n  loader: boolean;\n};\n\nexport default class Selector extends React.Component<SelectorProps, MyState> {\n  state: MyState = {} as MyState;\n  elRef: React.RefObject<HTMLDivElement>;\n\n  componentDidMount() {\n    emitter.sub(EVENT_SOUNDS_LOADING_START, this.turnOnLoader);\n    return emitter.sub(EVENT_SOUNDS_LOADING_STOP, this.turnOffLoader);\n  }\n\n  constructor(props: SelectorProps) {\n    super(props);\n\n    this.elRef = React.createRef();\n\n    this.state = {\n      pos: props.initialPos || {x: 0, y: 0},\n      dragging: false,\n      relx: 0,\n      loader: !!props.loader,\n      loaderFontSize: 20,\n    };\n  }\n\n  turnOnLoader = () => {\n    return this.setState({ loader: true });\n  }\n\n  turnOffLoader = () => {\n    return this.setState({ loader: false });\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.elRef}\n        className=\"col-md-4 selector\"\n        style={{\n          height: this.props.height,\n          width: this.props.width,\n          left: `${this.state.pos.x}px`,\n          top: `${this.state.pos.y}px`,\n          position: \"absolute\",\n        }}\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}\n      >\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            background: \"black\",\n            textAlign: \"center\",\n            position: \"relative\",\n            opacity: 0.5,\n            paddingTop: `${this.props.height / 2 - this.state.loaderFontSize}px`,\n            display: this.state.loader ? \"block\" : \"none\",\n          }}\n        >\n          <span\n            style={{\n              opacity: 1,\n              color: \"white\",\n              fontSize: `${this.state.loaderFontSize}px`,\n              // \"textAlign:\": \"center\",\n              fontStyle: \"italic\",\n            }}\n          >\n            loading\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidUpdate(props: SelectorProps, state: MyState) {\n    if (this.state.dragging && !state.dragging) {\n      document.addEventListener(\"mousemove\", this.onMouseMove);\n      return document.addEventListener(\"mouseup\", this.onMouseUp as any);\n    } else if (!this.state.dragging || !state.dragging) {\n      document.removeEventListener(\"mousemove\", this.onMouseMove);\n      return document.removeEventListener(\"mouseup\", this.onMouseUp as any);\n    }\n  }\n\n  onMouseDown = (e: React.MouseEvent | MouseEvent) => {\n    if (e.button !== 0) {\n      return;\n    }\n    const left = this.elRef.current?.offsetLeft || 0;\n    const relx = e.pageX - left;\n    this.setState({ dragging: true, relx });\n    console.log({left, relx, dragging: true})\n    e.stopPropagation();\n    return e.preventDefault();\n  }\n\n  onMouseUp = (e: React.MouseEvent) => {\n    this.setState({ dragging: false });\n    e.stopPropagation();\n    return e.preventDefault();\n  }\n\n  onMouseMove = (e: MouseEvent) => {\n    if (!this.state.dragging) {\n      console.log('not draggin')\n      return;\n    }\n\n    const pos = {} as { x: number | undefined };\n    const newX = e.pageX - this.state.relx;\n    const { minX, maxX, useX } = this.props;\n\n    if (newX >= minX && newX <= maxX) {\n      pos.x = newX;\n    } else if (newX <= minX) {\n      pos.x = minX;\n    } else if (newX >= maxX) {\n      pos.x = maxX;\n    }\n\n    console.log({pos, newX, minX, maxX, useX, ch: this.props.onXChange})\n\n    if (typeof this.props.onXChange === \"function\") {\n      this.props.onXChange(pos.x);\n    }\n\n    this.setState({ pos });\n    e.stopPropagation();\n    return e.preventDefault();\n  }\n}\n","export const EVENT_SOUNDS_LOADING_START = \"EVENT_SOUNDS_LOADING_START\";\nexport const EVENT_SOUNDS_LOADING_STOP = \"EVENT_SOUNDS_LOADING_STOP\";\n","export const blFret = (\n  sNum: number,\n  fNum: number,\n  note: string,\n  checked: boolean,\n  playing: boolean,\n  selected?: boolean,\n  root_note?: boolean,\n  is_open?: boolean\n) => {\n  if (!checked) {\n    checked = false;\n  }\n  if (!playing) {\n    playing = false;\n  }\n  if (!selected) {\n    selected = false;\n  }\n  if (!root_note) {\n    root_note = false;\n  }\n  if (!is_open) {\n    is_open = false;\n  }\n\n  return {\n    data() {\n      return { sNum, fNum, note, checked, playing, selected, root_note, is_open };\n    },\n    playStart() {\n      return (playing = true);\n    },\n    playStop() {\n      return (playing = false);\n    },\n    check() {\n      return (checked = true);\n    },\n    uncheck() {\n      return (checked = false);\n    },\n    select() {\n      return (selected = true);\n    },\n    unselect() {\n      return (selected = false);\n    },\n    set_root() {\n      return (root_note = true);\n    },\n    set_open() {\n      return (is_open = true);\n    },\n  };\n};\n\ntype ReturnType<T> = T extends (...args: any[]) => infer R ? R : any;\nexport type BlFret = ReturnType<typeof blFret>;","import React from \"react\";\n\nexport type FretData =  {\n  checked: boolean;\n  playing: boolean;\n  selected?: boolean;\n  root_note?: boolean;\n  is_open?: boolean;\n  note: string;\n}\n\nconst Fret = (props: {\n  width: number;\n  height: number;\n  data: FretData;\n}) => {\n  let text = \"\";\n  let fretClass = \"fret\";\n\n  let className = props.data.checked ? \"on\" : \"off\";\n  if (props.data.checked && props.data.selected) {\n    className = \"on-selected\";\n  }\n\n  if (props.data.root_note) {\n    className = \"on-selected-root\";\n  }\n\n  if (props.data.checked) {\n    text = props.data.note;\n  }\n\n  const playClass = props.data.playing ? \"playing\" : \"\";\n\n  if (props.data.is_open) {\n    if (!props.data.checked) {\n      className = `${className} open`;\n    }\n    text = props.data.note;\n    fretClass = \"\";\n  }\n\n  return (\n    <div\n      className={`col-md-1 ${fretClass} padding0`}\n      style={{\n        width: props.width,\n        height: props.height,\n      }}\n    >\n      <span className=\"string\"></span>\n      <span className={`circleBase ${className} ${playClass}`}>{text}</span>\n    </div>\n  );\n};\n\nexport default Fret;\n","import React from \"react\";\nimport { BlFret } from \"./blFret\";\nimport Fret from \"./Fret\";\n\n\nconst GString = (props: {\n  Fwidth: number,\n  Fheight: number,\n  data: {\n    frets: Record<number, BlFret>\n\n  }\n}) => {\n  let fret;\n  const make_fret = (fret: any) =>\n    (<Fret\n      key={`fret_${fret.data().sNum}${fret.data().fNum}`}\n      data={fret.data()}\n      width={props.Fwidth}\n      height={props.Fheight}\n    />);\n\n  const frets = [\n    (() => {\n      const result = [];\n      for (let fNum in props.data.frets) {\n        fret = props.data.frets[fNum];\n        result.push(make_fret(fret));\n      }\n      return result;\n    })(),\n  ];\n  return (<div className=\"row\">{frets}</div>);\n}\n\nexport default GString;","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS104: Avoid inline assignments\n * DS201: Simplify complex destructure assignments\n * DS202: Simplify dynamic range loops\n * DS204: Change includes calls to have a more natural evaluation order\n * DS205: Consider reworking code to avoid use of IIFEs\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nimport async from \"async\";\nimport React from \"react\";\nimport * as _ from \"lodash\";\n\nimport { generateNotes } from \"./notes\";\nimport Selector, { SelectorProps } from \"./selector\";\nimport { NoteEntry, SCALES } from \"./scales\";\nimport { BlFret, blFret } from \"./blFret\";\nimport GString from \"./GString\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faStop,\n  faRedo,\n  faArrowUp,\n  faArrowDown,\n  faRandom,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport Howl, { HowlCallback } from \"howler\";\n\nexport const get_sound = (sNum: number, fNum: number, onload: HowlCallback): Howl.Howl => {\n  const audio_file_wav = `./resources/${sNum}string/wav/${fNum}.wav`;\n  const audio_file_ogg = `./resources/${sNum}string/ogg/${fNum}.ogg`;\n  const audio_file_mp3 = `./resources/${sNum}string/mp3/${fNum}.mp3`;\n  return new Howl.Howl({ src: [audio_file_ogg, audio_file_mp3, audio_file_wav], onload });\n};\n\nconst clickHowl = new Howl.Howl({ src: \"./resources/cowbell.wav\" });\nconst claveHowl = new Howl.Howl({ src: \"./resources/clave.wav\" });\n\n\nfunction playClick() {\n  claveHowl.play();\n}\n\nfunction playIntroClick() {\n  clickHowl.play();\n}\n\nconst getClearFrets = (\n  sNum: number,\n  fNum: number,\n  notesMap: Record<number, Record<number, string>>\n) => {\n  const frets: Record<number, Record<number, BlFret>> = {};\n  for (let i = 1, end = sNum, asc = 1 <= end; asc ? i <= end : i >= end; asc ? i++ : i--) {\n    frets[i] = {};\n    for (let j = 0, end1 = fNum, asc1 = 0 <= end1; asc1 ? j <= end1 : j >= end1; asc1 ? j++ : j--) {\n      frets[i][j] = blFret(i, j, notesMap[i][j], false, false);\n    }\n  }\n  return frets;\n};\n\ntype Tuning = any;\n\ntype MyProps = {\n  tuning: Tuning;\n  data?: {\n    fretsNum: number;\n    stringsNum: number;\n  };\n  selectorFretsCount: number;\n  fretWidth: number;\n  fretHeight: number;\n  Scale: string;\n  Note: string;\n  bpm: number;\n};\ntype MyState = {\n  selectorX: number;\n  is_playing: boolean;\n  playing_fret?: FretType;\n  timeout: number;\n  changeDirection: boolean;\n  repeat: boolean;\n  direction: string;\n  originalDirection: string;\n  selector: SelectorProps;\n  stringsNum: number;\n  fretsNum: number;\n  selectorFretsCount: number;\n};\n\ntype FretType = [number, number];\n\nconst SelectorPaddingPx = 16;\n\nexport default class Guitar extends React.Component<MyProps, MyState> {\n  jsGuitarRef: React.RefObject<HTMLDivElement>;\n  displayRef: React.RefObject<HTMLHeadingElement>;\n\n  startPlayFret(fret: FretType) {\n    return this.setState({ playing_fret: fret });\n  }\n\n  playScaleHelper = ({ firstTime }: { firstTime: boolean }): any => {\n    const { scale, notes } = SCALES[this.props.Scale].get_notes(this.props.Note);\n\n    const notesMap = generateNotes(\n      this.state.stringsNum,\n      this.state.fretsNum,\n      this.props.tuning.notes,\n      notes\n    );\n\n    const self = this;\n    const play_iterator = (nums: number[], cb: Function) => {\n      const [sNum, fNum] = nums;\n      const note = notesMap[sNum][fNum];\n      const noteEntry: NoteEntry = _.find(scale, (n) => n.name === note);\n\n      console.log(this.state.direction);\n      const halfToneOffset =\n        this.state.direction === \"DOWN\"\n          ? `+${noteEntry.offset}`\n          : `-${noteEntry.offset === 0 ? 0 : 12 - noteEntry.offset}`;\n\n      this.displayRef.current!.innerHTML = `${noteEntry.name} - ${noteEntry.scaleName} ${halfToneOffset}`;\n\n      if (!self.state.is_playing) {\n        console.log(\"not playing anymore so canceling\");\n        self.setState({ playing_fret: undefined });\n        cb(\"stop\");\n      } else {\n        console.log(\"doing the thing at \", { sNum, fNum });\n        self.startPlayFret([sNum, fNum]);\n        playClick();\n        setTimeout(cb, (60 * 1000) / this.props.bpm);\n      }\n    };\n\n    const tabs_to_play = this.get_selected_frets({\n      startAtRoot: firstTime\n    });\n    // if we're repeating, don't play the note we just played again\n    if (!firstTime) {\n      tabs_to_play.shift();\n    }\n    // console.log({tabs_to_play});\n\n    return async.mapSeries(tabs_to_play, play_iterator, (err) => {\n      if (!self.state.is_playing) {\n        return;\n      }\n\n      if (self.state.repeat) {\n        if (self.state.changeDirection) {\n          self.toggleDirection();\n        }\n        return self.playScale({ intro: false });\n      } else {\n        return self.setState({ is_playing: false });\n      }\n    });\n  };\n\n  countOff(done: Function) {\n    const countInTimes = 4;\n    let timesCounted = 0;\n\n    const tabs_to_play = this.get_selected_frets({startAtRoot: true});\n    const firstTab = tabs_to_play[0];\n    console.log({firstTab})\n\n    const cb = () => {\n      if (!this.state.is_playing) {\n        return;\n      }\n\n      if (timesCounted % 2 === 0) {\n        this.setState({ playing_fret: firstTab as FretType });\n      } else {\n        this.setState({ playing_fret: undefined });\n      }\n\n      playIntroClick();\n      timesCounted++;\n      if (timesCounted === 1) {\n        this.displayRef.current!.innerHTML = \"Get Ready! \" + timesCounted.toString();\n      } else {\n        this.displayRef.current!.innerHTML = timesCounted.toString();\n      }\n      if (timesCounted === countInTimes) {\n        setTimeout(done, (60 * 1000) / this.props.bpm);\n      } else {\n        setTimeout(cb, (60 * 1000) / this.props.bpm);\n      }\n    };\n\n    cb();\n  }\n\n  playScale({ intro }: { intro?: boolean }): any {\n    console.log(\"setting playing to true\");\n    this.setState({ is_playing: true }, () => {\n      if (intro) {\n        this.setState({originalDirection: this.state.direction })\n        this.countOff(() => this.playScaleHelper({ firstTime: true }));\n      } else {\n        this.playScaleHelper({ firstTime: false });\n      }\n    });\n  }\n\n  stopPlayScale() {\n    return this.setState({ \n      direction: this.state.originalDirection,\n      is_playing: false\n     });\n  }\n\n  toggleDirection() {\n    if (this.state.direction === \"UP\") {\n      return this.setState({ direction: \"DOWN\" });\n    } else {\n      return this.setState({ direction: \"UP\" });\n    }\n  }\n\n  get_selected_frets({startAtRoot}: {\n    startAtRoot: boolean\n  }) {\n    const { scale, notes } = SCALES[this.props.Scale].get_notes(this.props.Note);\n\n    const notesMap = generateNotes(\n      this.state.stringsNum,\n      this.state.fretsNum,\n      this.props.tuning.notes,\n      notes\n    );\n\n    let sNum;\n    let string, fret;\n    const ret_tabs = [];\n\n    let strings: [BlFret, number][] = (() => {\n      const result: [BlFret, number][] = [];\n      const object = this.get_frets();\n      _.each(object, (string: Record<number, BlFret>, sN) => {\n        result.push([string as any, (sN as unknown) as number]);\n      });\n      return result;\n    })();\n    if (this.state.direction === \"DOWN\") {\n      strings = strings.reverse();\n    }\n\n    let shouldInclude = startAtRoot ? false : true;\n\n    for ([string, sNum] of Array.from(strings)) {\n      let fNum;\n      let frets: [BlFret, number][] = [];\n      _.each(string, (fret, fN) => {\n        frets.push([fret as any, (fN as unknown) as number]);\n      });\n\n      if (this.state.direction === \"UP\") {\n        frets = frets.reverse();\n      }\n\n      for ([fret, fNum] of Array.from(frets)) {\n        if (fret.data().selected && fret.data().checked) {\n          if (!shouldInclude) {\n            const note = notesMap[sNum][fNum];\n            const noteEntry: NoteEntry = _.find(scale, (n) => n.name === note);\n            if (noteEntry.offset === 0) {\n              shouldInclude = true;\n            }\n          }\n          if (shouldInclude) {\n            ret_tabs.push([sNum, fNum]);\n          }\n        }\n      }\n    }\n    return ret_tabs;\n  }\n\n  componentDidMount() {\n    if (!this.jsGuitarRef.current) {\n      return;\n    }\n    const selectorWidth = this.state.selectorFretsCount * this.props.fretWidth;\n    const { selector } = this.state;\n    const selectorX = this.jsGuitarRef.current.offsetLeft;\n    selector.initialPos = { x: selectorX, y: this.jsGuitarRef.current.offsetTop - SelectorPaddingPx / 2 };\n    selector.minX = selectorX - 10;\n    selector.maxX = selectorX + (this.state.fretsNum + 1) * this.props.fretWidth - selectorWidth;\n    return this.setState({ selector, selectorX });\n  }\n\n  constructor(props: MyProps) {\n    super(props);\n\n    this.displayRef = React.createRef();\n\n    const stringsNum = (props.data != null ? props.data.stringsNum : undefined) || 6;\n    const fretsNum = (props.data != null ? props.data.fretsNum : undefined) || 16;\n    const selectorFretsCount = props.selectorFretsCount || 4;\n    const timeout = 400;\n    let selector = null;\n    const is_playing = false;\n    const direction = \"DOWN\";\n    const repeat = true;\n    const changeDirection = true;\n    const selectorWidth = selectorFretsCount * props.fretWidth;\n    const playing_fret = undefined;\n\n    this.jsGuitarRef = React.createRef();\n\n    selector = {\n      height: stringsNum * props.fretHeight + SelectorPaddingPx,\n      width: selectorWidth,\n      onXChange: (x: number) => this.onSelectorMove(x),\n      minX: 20,\n      maxX: -1,\n    };\n\n    this.state = {\n      stringsNum,\n      fretsNum,\n      timeout,\n      selector,\n      is_playing,\n      selectorFretsCount,\n      direction,\n      repeat,\n      changeDirection,\n      playing_fret,\n      selectorX: 0,\n      originalDirection: direction\n    };\n\n    document.addEventListener(\"keydown\", (e) => {\n      if (e.key === \" \") {\n        this.togglePlayPause();\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    });\n  }\n\n  onSelectorMove(x: number) {\n    return this.setState({ selectorX: x, is_playing: false });\n  }\n\n  get_frets = (): Record<number, Record<number, BlFret>> => {\n    const { scale, notes } = SCALES[this.props.Scale].get_notes(this.props.Note);\n\n    const notesMap = generateNotes(\n      this.state.stringsNum,\n      this.state.fretsNum,\n      this.props.tuning.notes,\n      notes\n    );\n\n    const frets = getClearFrets(this.state.stringsNum, this.state.fretsNum, notesMap);\n    const selectorWidth = this.state.selectorFretsCount * this.props.fretWidth;\n\n    if (!this.state.selector.initialPos) {\n      return frets;\n    }\n\n    const x = this.state.selectorX;\n\n    _.each(frets, (string, sN) => {\n      for (let fN in string) {\n        let needle;\n        const fret = string[fN];\n        const fret_offset =\n          (this.state.selector?.initialPos?.x || 0) +\n          ((fN as unknown) as number) * this.props.fretWidth;\n\n        if (fret_offset >= x && fret_offset < x + selectorWidth) {\n          fret.select();\n        }\n\n        if (fret.data().note === this.props.Note) {\n          fret.set_root();\n        }\n\n        if (this.state.playing_fret && this.state.is_playing) {\n          const [_sN, _fN] = Array.from(this.state.playing_fret);\n          if (_sN === ((sN as unknown) as number) && _fN === ((fN as unknown) as number)) {\n            fret.playStart();\n          }\n        }\n\n        if (\n          ((needle = fret.data().note),\n          Array.from(scale.map((n: NoteEntry) => n.name)).includes(needle))\n        ) {\n          fret.check();\n        }\n\n        if (fN === \"0\") {\n          fret.set_open();\n        }\n      }\n    });\n\n    return frets;\n  };\n\n  togglePlayPause = () => {\n    this.state.is_playing ? this.stopPlayScale() : this.playScale({ intro: true });\n  };\n\n  render() {\n    const frets = this.get_frets();\n\n    const StringsList = __range__(0, this.state.stringsNum, true).map((num) => {\n      return (\n        <GString\n          key={`string_item_${num}`}\n          data={{\n            frets: frets[num],\n          }}\n          Fwidth={this.props.fretWidth}\n          Fheight={this.props.fretHeight}\n        />\n      );\n    });\n\n    const SelectorComp = (() => {\n      if (this.state.selector.initialPos) {\n        if (this.state.selector) {\n          return <Selector {...this.state.selector} />;\n        }\n      } else {\n        return <div></div>;\n      }\n    })();\n\n    const SingleDotFrets = [3, 5, 7, 9, 15, 17, 19];\n    const FretDots = (\n      <div className=\"row\" style={{ margin: 0 }}>\n        {__range__(0, this.state.fretsNum, true).map((num) => {\n          return (\n            <div\n              key={`fret_dot_${num}`}\n              className={`col-md-1 fretdot`}\n              style={{\n                textAlign: \"left\",\n                width: `${this.props.fretWidth}px`,\n                right: \"9px\",\n                fontSize: \"x-large\",\n              }}\n            >\n              {SingleDotFrets.includes(num) && \"•\"}\n              {num === 12 && \"••\"}\n            </div>\n          );\n        })}\n      </div>\n    );\n\n    const FretNumbers = (\n      <div className=\"row\" style={{ margin: 0 }}>\n        {__range__(0, this.state.fretsNum, true).map((num) => {\n          let active = \"\";\n          const x = this.state.selectorX;\n          if (x) {\n            const selectorWidth = this.state.selectorFretsCount * this.props.fretWidth;\n            const fret_offset =\n              (this.state.selector.initialPos?.x || 0) + num * this.props.fretWidth;\n            if (fret_offset >= x && fret_offset < x + selectorWidth) {\n              active = \"active-num\";\n            }\n          }\n          return (\n            <div\n              key={`fret_num_${num}`}\n              className={`col-md-1 fretnum ${active}`}\n              style={{ width: `${this.props.fretWidth}px` }}\n            >\n              {num}\n            </div>\n          );\n        })}\n      </div>\n    );\n\n    return (\n      <div\n        style={{\n          width: (this.state.fretsNum + 1) * this.props.fretWidth,\n          margin: \"auto\",\n        }}\n      >\n        <h1\n          ref={this.displayRef}\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            alignContent: \"center\",\n            width: \"100%\",\n            backgroundColor: \"beige\",\n            padding: \"20px\",\n            fontSize: \"xx-large\",\n            display: this.state.is_playing ? \"flex\" : \"none\",\n          }}\n        >\n          xxxx\n        </h1>\n\n        <div>\n          {FretNumbers}\n          {FretDots}\n        </div>\n        <div className=\"js-guitar\" ref={this.jsGuitarRef}>\n          {SelectorComp}\n\n          {StringsList}\n          {FretDots}\n          {FretNumbers}\n        </div>\n        <div\n          style={{\n            width: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            alignContent: \"center\",\n            display: \"flex\",\n            paddingTop: \"20px\",\n          }}\n        >\n          <Button\n            variant=\"outline-primary\"\n            className={this.state.is_playing ? \"active\" : \"\"}\n            onClick={this.togglePlayPause}\n          >\n            {this.state.is_playing ? (\n              <FontAwesomeIcon icon={faStop} />\n            ) : (\n              <FontAwesomeIcon icon={faPlay} />\n            )}\n          </Button>\n\n          <Button\n            variant=\"outline-primary\"\n            className={this.state.repeat ? \"active\" : \"\"}\n            onClick={() => this.setState({ repeat: !this.state.repeat })}\n          >\n            <FontAwesomeIcon icon={faRedo} />\n          </Button>\n\n          <Button\n            variant=\"outline-primary\"\n            className={this.state.direction === \"UP\" ? \"active\" : \"\"}\n            onClick={() => this.toggleDirection()}\n          >\n            {this.state.direction === \"UP\" ? (\n              <FontAwesomeIcon icon={faArrowDown} />\n            ) : (\n              <FontAwesomeIcon icon={faArrowUp} />\n            )}\n          </Button>\n\n          <Button\n            variant=\"outline-primary\"\n            className={this.state.changeDirection ? \"active\" : \"\"}\n            onClick={() => this.setState({ changeDirection: !this.state.changeDirection })}\n          >\n            <FontAwesomeIcon icon={faRandom} />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction __range__(left: number, right: number, inclusive: boolean) {\n  let range = [];\n  let ascending = left < right;\n  let end = !inclusive ? right : ascending ? right + 1 : right - 1;\n  for (let i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n    range.push(i);\n  }\n  return range;\n}\n","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS205: Consider reworking code to avoid use of IIFEs\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nimport React from \"react\";\nimport { SCALES } from \"./../scales\";\nimport { ALL_NOTES, TUNINGS } from \"./../notes\";\n\nimport { STEP, hSTEP, BigSTEP } from \"./../scales\";\nimport Guitar from \"../Guitar\";\n\n// import Select from \"react-select\";\nimport Select from \"react-dropdown-select\";\n\nconst print_size = (size: number[]) =>\n  (() => {\n    const result = [];\n    for (let s of Array.from(size)) {\n      if (s === STEP) {\n        result.push(\"W\");\n      } else if (s === hSTEP) {\n        result.push(\"H\");\n      } else if (s === BigSTEP) {\n        result.push(\"+3\");\n      } else {\n        result.push(`+${s}`);\n      }\n    }\n\n    return result;\n  })().join(\" - \");\n\nconst notesOptions = ALL_NOTES.map((note) => ({ value: note, label: note }));\nconst scalesOptions = (() => {\n  const result = [];\n  for (let scale in SCALES) {\n    result.push({ value: scale, label: SCALES[scale].desc });\n  }\n  return result;\n})();\n\ntype MyProps = {};\ntype MyState = {\n  tuning: string;\n  Note: string;\n  Scale: string;\n  bpm: number;\n};\n\nexport default class ScalesPage extends React.Component<MyProps, MyState> {\n  state = {\n    Note: \"C\",\n    Scale: \"Major\",\n    tuning: \"Standard\",\n    bpm: 80,\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h2 className=\"text-center\">\n            {`${this.state.Note} ${this.state.Scale}`}\n            {/* {`(${tuningName} tuning)`} */}\n          </h2>\n\n          <p className=\"text-center text-muted text-bold\">\n            {print_size(SCALES[this.state.Scale].size)}\n          </p>\n          <p className=\"text-center text-bold\">\n            {`${SCALES[this.state.Scale]\n              .get_notes(this.state.Note)\n              .scale.map((n: any) => n.name)\n              .join(\" \")}`}\n          </p>\n          <div>\n            <div style={{ width: \"850px\", margin: \"auto\" }}>\n              <Guitar\n                bpm={this.state.bpm}\n                fretWidth={50}\n                fretHeight={30}\n                selectorFretsCount={4}\n                Note={this.state.Note}\n                Scale={this.state.Scale}\n                tuning={TUNINGS[this.state.tuning]}\n              />\n            </div>\n\n            <div\n              style={{\n                width: \"850px\",\n                margin: \"auto\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                paddingTop: \"15px\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  zIndex: 10000,\n                  paddingBottom: \"20px\",\n                }}\n              >\n                <div style={{ width: \"100px\" }}>\n                  <Select\n                    options={notesOptions as any}\n                    placeholder=\"note\"\n                    searchable={false}\n                    values={[\n                      { value: this.state.Note, label: this.state.Note },\n                    ]}\n                    onChange={(n) =>\n                      this.setState({ Note: (n as any)[0].value })\n                    }\n                  />\n                </div>\n                <div style={{ width: \"250px\" }}>\n                  <Select\n                    options={scalesOptions as any}\n                    placeholder=\"scale\"\n                    searchable={false}\n                    values={[\n                      {\n                        value: this.state.Scale,\n                        label: SCALES[this.state.Scale].desc,\n                      },\n                    ]}\n                    onChange={(n) => {\n                      console.log(n);\n                      this.setState({ Scale: (n as any)[0].value });\n                    }}\n                  />\n                </div>\n\n                {/* <div style={{ width: \"150px\" }}>\n                  <Select\n                    options={tuningOptions}\n                    searchable={false}\n                    placeholder=\"tuning\"\n                    values={[this.state.tuning]}\n                    onChange={(n) => this.setState({ tuning: (n as any).value })}\n                  />\n                </div> */}\n<input></input>\n                <div\n                >\n                  <input\n                    value={this.state.bpm}\n                    onChange={(e: any) =>\n                      this.setState({ bpm: Number(e!.target.value) })\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer\"\n        style={{\n          color: 'darkslategrey',\n          width: '100%',\n          textAlign: 'center',\n          position: 'absolute',\n          bottom: '10px',\n          fontSize: 'small'\n        }}>\n          A thing by <a href=\"http://blackmad.com\">blackmad</a>, source on <a href=\"https://github.com/blackmad/fretboard\">github</a>\n          <br/>based on work by <a href=\"https://github.com/AlexMost/fretboard\">AlexMost</a>\n          <br/>includes sounds from <a href=\"https://freesound.org/\">freesound.org</a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./css/App.css\";\nimport \"./css/bootstrap.css\";\nimport \"./css/style.css\";\nimport ScalesPage from \"./fretboard/pages/scales_page_component\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"smallScreen\" style={{\n        width: \"100vw\",\n        height: \"100vh\",\n        fontSize: \"xx-large\",\n        textAlign: \"center\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: \"20%\",\n      }}>\n        Please resize your browser to be at least 1000px wide \n      </div>\n      <div className=\"bigScreen\">\n        <ScalesPage />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}